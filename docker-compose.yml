version: "3"

services:
  arrayscan_mysql_db:
    hostname: arrayscan_mysql_db
    #    image: mysql   # Pull mysql image from Docker Hub
    image: mysql:5.7
    environment:   # Set up mysql database name and password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: arrayscan
      MYSQL_USER: arrayscan
      MYSQL_PASSWORD: password
    ports:    # Set up ports exposed for other containers to connect to
      - 3307:3306
    volumes:
      - ./chemgen-next-web-docker/chemgen-next-dev-arrayscandb:/docker-entrypoint-initdb.d
    networks:
      - app-tier

  ## I have been using this one to test actual database dumps
  # chemgen_next_dev_mysql_db:
  #   image: mysql   # Pull mysql image from Docker Hub
  #   environment:   # Set up mysql database name and password
  #     MYSQL_ROOT_PASSWORD: password
  #     MYSQL_DATABASE: chemgen-next-dev
  #     MYSQL_USER: chemgen
  #     MYSQL_PASSWORD: password
  #   ports:    # Set up ports exposed for other containers to connect to
  #     - "3308:3306"
  #   volumes:  # Mount relative path source folder on host to absolute path destination folder on docker container
  ##       /docker-entrypoint-initdb.d will only process 1 mysql file
  #     - ./chemgen-next-dev-mysqldb:/docker-entrypoint-initdb.d

  ## This is an empty testing instance
  ## It only has the library info and workflows
  chemgen_next_dev_mysql_db:
    #    hostname: chemgen_next_dev_mysql_db
    #    image: mysql   # Pull mysql image from Docker Hub
    image: mysql:5.7
    environment:   # Set up mysql database name and password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chemgen-next-dev
      MYSQL_USER: chemgen
      MYSQL_PASSWORD: password
    ports:    # Set up ports exposed for other containers to connect to
      - 3308:3306
    volumes:
      #       /docker-entrypoint-initdb.d will only process 1 mysql file
      - ./chemgen-next-web-docker/chemgen-next-test-mysqldb:/docker-entrypoint-initdb.d
    networks:
      - app-tier


  chemgen_next_dev_mysql_db_phpmyadmin:
    #    hostname: chemgen_next_dev_mysql_db
    #    image: mysql   # Pull mysql image from Docker Hub
    image: phpmyadmin/phpmyadmin
    environment:   # Set up mysql database name and password
      PMA_HOST: chemgen_next_dev_mysql_db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chemgen-next-dev
      MYSQL_USER: chemgen
      MYSQL_PASSWORD: password
    ports:    # Set up ports exposed for other containers to connect to
      - 8081:80
    networks:
      - app-tier

  chemgen_next_mongodb:
    hostname: chemgen_next_mongodb
    image: mongo
    environment:   # Set up mysql database name and password
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD:  password
      MONGO_INITDB_DATABASE: chemgen
    ports:    # Set up ports exposed for other containers to connect to
      - "27017:27017"
    volumes:
      - ./chemgen-next-web-docker/chemgen-next-dev-mongodb:/chemgen-next-dev-mongodb
    networks:
      - app-tier

  mongodb_seed:
    depends_on:
      - chemgen_next_mongodb
    links:
      - chemgen_next_mongodb
    build: ./chemgen-next-web-docker/chemgen-next-dev-mongodb
    networks:
      - app-tier

  wordpress_db:
    hostname: wordpress_db
    image: mysql:5.7
    restart: always
    ports:    # Set up ports exposed for other containers to connect to
      - "3309:3306"
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - wordpress_db_data:/var/lib/mysql
    networks:
      - app-tier

  wordpress:
    depends_on:
      - wordpress_db
    links:
      - wordpress_db:mysql
    image: wordpress:latest
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: wordpress_db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: password
    volumes:
      - ./chemgen-next-wptheme-ad:/var/www/html/wp-content/themes/chemgen-next-wptheme:ro
    networks:
      - app-tier

  redis:
    hostname: redis
    image: "redis:alpine"
    ports:
      - 6380:6379
    networks:
      - app-tier

#  chemgen_next_server:
#    build: ./chemgen-next-server
#    user: "node"
#    working_dir: /home/node/app
#    depends_on:
#    - wordpress_db
#    - chemgen_next_dev_mysql_db
#    - arrayscan_mysql_db
#    - redis
#    - chemgen_next_mongodb
#    links:
#    - wordpress_db
#    - chemgen_next_dev_mysql_db
#    - arrayscan_mysql_db
#    - redis
#    - chemgen_next_mongodb
#    environment:
#    - NODE_ENV=dev
#    volumes:
#    - ./chemgen-next-server:/home/node/app
#    ports:
#    - "3001:3000"
#    networks:
#    - app-tier

#  chemgen_next_client:
#    image: "node:9"
#    user: "node"
#    depends_on:
#    - chemgen_next_server
#    working_dir: /home/node/app
#    environment:
#    - NODE_ENV=dev
#    volumes:
#    - ./chemgen-next-client:/home/node/app
#    ports:
#    - "4201:4200"
#    command: "npm install -g @angular/cli; ng serve"
#    networks:
#    - app-tier

## Using volumes will persist data
volumes:
  wordpress_db_data:

networks:
  app-tier:
    driver: bridge
